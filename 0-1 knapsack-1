#include <bits/stdc++.h>
using namespace std;
//memorization
//  0/1 knapsack problem before memorization 
int knapsack(vector<int> wt,vector<int> val,int cap,int size){
    if(size==0||cap==0){
        return 0;
    }
    if(wt[size-1]<=cap){
        return max((val[size-1]+knapsack(wt,val,cap-wt[size-1],size-1)) ,(knapsack(wt,val,cap,size-1)) );
    }
    else{
        return knapsack(wt,val,cap,size-1);
    }
}

int main() {
	// your code goes here
	vector<int> wt;
	vector<int> val;
	int capacity;
	int size;
	cin>>size;
	int v;
	for(int i=0;i<size;i++){
	    cin>>v;
	    wt.push_back(v);
	}
	
	for(int i=0;i<size;i++){
	    cin>>v;
	    val.push_back(v);
	}
	cin>>capacity;
	int ans=0;
	ans=knapsack(wt,val,capacity,size);
	cout<<ans;
	return 0;
}
