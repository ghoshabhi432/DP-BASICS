input:
5
2 3 7 8 10
11
output:
1 0 0 0 0 0 0 0 0 0 0 0 
1 0 1 0 0 0 0 0 0 0 0 0 
1 0 1 1 0 1 0 0 0 0 0 0 
1 0 1 1 0 1 0 1 0 1 1 0 
1 0 1 1 0 1 0 1 1 1 1 1 
1 0 1 1 0 1 0 1 1 1 1 1 

1(ans)

#include <bits/stdc++.h>

using namespace std;

int main() {
	// your code goes here
	vector<int> arr;
	
	int sum;
	int size;
	cin>>size;
	int v;
	for(int i=0;i<size;i++){
	    cin>>v;
	    arr.push_back(v);
	}
	
	cin>>sum;
	//int ans=0;
	//ans=knapsack(wt,val,capacity,size);
	//cout<<ans;
	bool dp[size+1][sum+1];
	
	for(int i=0;i<size+1;i++){
	    for(int j=0;j<sum+1;j++){
	        if(i==0){
	            dp[i][j]=false;
	        }
	        if(j==0){
	            dp[i][j]=true;
	        }
	    }
	}
	
	for(int i=1;i<size+1;i++){
	    for(int j=1;j<sum+1;j++){
	        if(arr[i-1]<=j){
	            dp[i][j]=dp[i-1][j-arr[i-1]]||dp[i-1][j];
	        }
	        else{
	            dp[i][j]=dp[i-1][j];
	        }
	    }
	}
	
	for(int i=0;i<size+1;i++){
	    for(int j=0;j<sum+1;j++){
	        cout<<dp[i][j]<<" ";
	    }
	    cout<<endl;
	}
	cout<<endl;

	cout<<dp[size][sum];
	return 0;

}
